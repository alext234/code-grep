global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /mnt/data/haproxy_admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL).
	# ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL


	maxconn 20000
	


defaults

	log	global
	mode	http
	# option http-server-close
	option forwardfor
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  10000
        timeout server  10000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http

	#errorfile 503 /etc/haproxy/errors/503.http
	errorfile 503 /home/cg/maintenance.http

	errorfile 504 /etc/haproxy/errors/504.http

	stats enable
	stats uri /haproxystats
	stats realm Haproxy\ Statistics
	stats auth admin:cg2014

frontend www-http
   bind *:80
   reqadd X-Forwarded-Proto:\ http
   default_backend www-backend

frontend www-https
   bind *:443 ssl crt /home/cg/tls/combined.pem
   reqadd X-Forwarded-Proto:\ https
   default_backend www-backend


backend www-backend
   redirect scheme https code 301 if !{ ssl_fc }
   balance     roundrobin
   # make the connection persistence per client
   cookie LB_SERVER_ID insert indirect nocache


   #server web1 web1:80 check cookie web1


   {% for server in groups.web_servers %}
	 server {{ server }} {{ server }}:8000 check cookie {{ server }}
	 {% endfor %}
 
